version: "3.7"

services:
  postgres:
    container_name: postgres_db
    image: postgres:11-alpine
    networks:
      - micro-backend
    environment:
      POSTGRES_USER:     "postgres_user"
      POSTGRES_PASSWORD: "postgres_pass"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 10s
      retries: 3

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    networks:
      - micro-backend
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbit_user"
      RABBITMQ_DEFAULT_PASS: "rabbit_pass"
      RABBITMQ_DEFAULT_VHOST: "/"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 10s
      retries: 5

  redis:
    container_name: redis
    image: redis
    networks:
      - micro-backend
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "bash", "-c", "exec 3<> /dev/tcp/127.0.0.1/6379 && echo PING >&3 && head -1 <&3 | grep PONG"]
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  micro-backend:
    name: micro-backend
    driver: bridge

volumes:
  rabbitmq_data:
  redis_data:
  postgres_db:
